# Extract based upon file ext
function extract() {
    if [ -f $1 ]; then
        case $1 in
            *.tar.bz2) tar xvjf $1   ;;
            *.tar.gz)  tar xvzf $1   ;;
            *.bz2)     bunzip2 $1    ;;
            *.rar)     unrar x $1    ;;
            *.gz)      gunzip $1     ;;
            *.tar)     tar xvf $1    ;;
            *.tbz2)    tar xvjf $1   ;;
            *.tgz)     tar xvzf $1   ;;
            *.zip)     unzip $1      ;;
            *.Z)       uncompress $1 ;;
            *.7z)      7z x $1       ;;
            *)         echo "'$1' cannot be extracted via >extract<" ;;
        esac
      else
        echo "'$1' is not a valid file"
    fi
}

# Regenerate MAC address
# http://jezenthomas.com/free-internet-on-trains/
remac() {
    sudo /System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -z
    sudo ifconfig en0 ether $(openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//')
    sudo networksetup -detectnewhardware
    echo $(ifconfig en0 | grep ether)
}

# Reset device DNS
# http://osxdaily.com/2015/06/02/change-dns-command-line-mac-os-x/
# http://osxdaily.com/2014/09/03/list-all-network-hardware-from-the-command-line-in-os-x/
resetdns() {
    sudo networksetup -setdnsservers "Ethernet" 192.168.0.3 1.1.1.1 1.0.0.1
    sudo networksetup -setdnsservers "Wi-Fi" 192.168.0.3 1.1.1.1 1.0.0.1
}

# Lint the PHP files in the specified directory
php-lint() {
    (find $1 -path ./vendor -prune -o -name "*.php" -exec php -l {} \; | grep -v "No syntax errors"); test $? -eq 1
}

# Display a weather forecast
weather() {
    local location=${1:-Leicester}
    local lang=${2:-en}

    curl -s wttr.in/$location?lang=$lang
}

# Identity application using port
# https://twitter.com/francesc/status/982025296898478080
whoseport() {
    lsof -i ":$1" -sTCP:LISTEN
}

# Arthur VM shortcut
# https://laravel.com/docs/5.8/homestead#daily-usage
function arthur() {
    (cd ~/Projects/arthur && vagrant $*)
}
